{"version":3,"sources":["components/Header.js","components/Timer.js","components/TimerManager.js","components/App.js","theme.js","index.js"],"names":["Header","textAlign","fontSize","Timer","props","formatTime","time","seconds","minutes","hours","Math","floor","TimerManager","useState","setTime","timer","setTimer","useEffect","setTimeout","console","log","onClick","App","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAEe,SAASA,IACpB,OACE,cAAC,IAAD,CAAKC,UAAU,SAAf,SACE,cAAC,IAAD,CAAMC,SAAS,MAAf,yB,mBCHO,SAASC,EAAMC,GAC1B,OACI,cAAC,IAAD,CAAMF,SAAS,OAAf,SAAuBG,EAAWD,EAAME,QAIhD,SAASD,EAAWC,GACXA,IAAMA,EAAO,GAClB,IAAIC,EACAC,EACAC,EAMJ,OALAF,EAAUD,EAAO,GAEjBE,GADAF,EAAOI,KAAKC,MAAML,EAAO,KACR,GACjBG,EAAQC,KAAKC,MAAML,EAAO,IAEpB,GAAN,OAAUG,EAAQ,EAAKA,EAAQ,EAAIA,EAAQ,IAAMA,EAAS,KAA1D,YAAkED,EAAU,EAAKA,EAAU,EAAIA,EAAU,IAAMA,EAAW,KAA1H,YAAkID,EAAU,EAAKA,EAAU,EAAIA,EAAU,IAAMA,EAAW,MCd/K,SAASK,IAAgB,IAAD,EACXC,mBAAS,GADE,mBAC5BP,EAD4B,KACtBQ,EADsB,OAETD,oBAAS,GAFA,mBAE5BE,EAF4B,KAErBC,EAFqB,KAsBnC,OAlBAC,qBAAU,WACFX,EAAO,GAAKS,EAEZG,WAAWJ,EAAS,IAAMR,EAAO,GAC1BA,EAAO,IAAMS,EAEpBD,EAAQ,GAGRE,GAAS,KAEd,CAACV,IAEJW,qBAAU,WACNE,QAAQC,IAAIL,KACb,CAACA,IAIA,eAAC,IAAD,CAAKd,UAAU,SAAf,UACI,cAACE,EAAD,CAAOG,KAAMA,IACb,cAAC,IAAD,CAAQe,QAAS,WACTN,IACJC,GAAS,GACTF,EAAQ,MAHZ,kBAKA,cAAC,IAAD,CAAQO,QAAS,WACbL,GAAS,GACTF,EAAQ,IAFZ,sBCpBGQ,MATf,WACE,OACE,eAAC,IAAD,WACE,cAACtB,EAAD,IACA,cAACY,EAAD,Q,gBCASW,EAFDC,YAAY,CAAEC,OALb,CACXC,iBAAkB,OAClBC,oBAAoB,KCGxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAgBP,MAAOA,EAAvB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.ffd64eda.chunk.js","sourcesContent":["import { Box, Text } from '@chakra-ui/react';\n\nexport default function Header() {\n    return (\n      <Box textAlign=\"center\">\n        <Text fontSize=\"6xl\">Web Timer</Text>\n      </Box>\n    )\n}","import { Text } from \"@chakra-ui/react\";\n\nexport default function Timer(props) {\n    return (\n        <Text fontSize=\"10vw\">{formatTime(props.time)}</Text>\n    )\n}\n\nfunction formatTime(time) {\n    if (!time) time = 0;\n    var seconds = 0;\n    var minutes = 0;\n    var hours = 0;\n    seconds = time % 60;\n    time = Math.floor(time / 60);\n    minutes = time % 60;\n    hours = Math.floor(time / 60);\n    \n    return `${hours > 0 ? (hours > 9 ? hours : \"0\" + hours) : \"00\"}:${minutes > 0 ? (minutes > 9 ? minutes : \"0\" + minutes) : \"00\"}:${seconds > 0 ? (seconds > 9 ? seconds : \"0\" + seconds) : \"00\"}`\n}","import { Box, Button } from \"@chakra-ui/react\";\nimport Timer from \"./Timer\";\nimport { useState, useEffect } from \"react\";\n\nexport default function TimerManager() {\n    const [time, setTime] = useState(0);\n    const [timer, setTimer] = useState(false)\n\n    useEffect(() => {\n        if (time > 0 && timer) {\n            // Countdown\n            setTimeout(setTime, 1000, time - 1);\n        } else if (time > 0 && !timer) {\n            // Reset\n            setTime(0);\n        } else {\n            // Alert when timer is done\n            setTimer(false);\n        }\n    }, [time]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    useEffect(() => {\n        console.log(timer)\n    }, [timer]);\n\n\n    return (\n        <Box textAlign=\"center\">\n            <Timer time={time} />\n            <Button onClick={function() {\n                if (timer) return;\n                setTimer(true)\n                setTime(60);\n            }}>Test</Button>\n            <Button onClick={function() {\n                setTimer(false);\n                setTime(0);\n            }}>Reset</Button>\n        </Box>\n    )\n}","import { Box } from '@chakra-ui/react';\nimport './App.css';\nimport Header from './Header';\nimport TimerManager from './TimerManager';\n\nfunction App() {\n  return (\n    <Box>\n      <Header />\n      <TimerManager />\n    </Box>\n  );\n}\n\nexport default App;\n","import { extendTheme } from \"@chakra-ui/react\"\n\nconst config = {\n    initialColorMode: \"dark\",\n    useSystemColorMode: false,\n}\n\nconst theme = extendTheme({ config });\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}